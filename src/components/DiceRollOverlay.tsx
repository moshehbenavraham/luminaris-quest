// GENERATED BY BOLT.NEW â€“ DO NOT EDIT MANUALLY

import { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Dice6 } from 'lucide-react';
import { type DiceResult } from '@/engine/scene-engine';

interface DiceRollOverlayProps {
  result: DiceResult;
  onClose: () => void;
}

export function DiceRollOverlay({ result, onClose }: DiceRollOverlayProps) {
  const [isVisible, setIsVisible] = useState(false);
  const [showResult, setShowResult] = useState(false);

  useEffect(() => {
    setIsVisible(true);
    
    const resultTimer = setTimeout(() => {
      setShowResult(true);
    }, 800);

    const closeTimer = setTimeout(() => {
      handleClose();
    }, 2300);

    return () => {
      clearTimeout(resultTimer);
      clearTimeout(closeTimer);
    };
  }, []);

  const handleClose = () => {
    setIsVisible(false);
    setTimeout(onClose, 300);
  };

  return (
    <div 
      className={`fixed inset-0 bg-black/50 flex items-center justify-center z-50 transition-opacity duration-300 ${
        isVisible ? 'opacity-100' : 'opacity-0'
      }`}
      onClick={handleClose}
    >
      <Card 
        className={`w-80 mx-4 transform transition-all duration-300 ${
          isVisible ? 'scale-100 opacity-100' : 'scale-95 opacity-0'
        }`}
        onClick={(e) => e.stopPropagation()}
      >
        <CardHeader className="text-center">
          <CardTitle className="flex items-center justify-center gap-2">
            <Dice6 className={`h-6 w-6 ${!showResult ? 'animate-spin' : ''}`} />
            Fate's Decision
          </CardTitle>
        </CardHeader>
        <CardContent className="text-center space-y-4">
          {!showResult ? (
            <div className="space-y-2">
              <div className="text-2xl font-bold animate-pulse">
                Rolling...
              </div>
              <div className="text-sm text-muted-foreground">
                Target: {result.dc}
              </div>
            </div>
          ) : (
            <div className="space-y-4">
              <div className="space-y-2">
                <div className="text-4xl font-bold">
                  {result.roll}
                </div>
                <div className="text-sm text-muted-foreground">
                  vs DC {result.dc}
                </div>
              </div>
              
              <div className={`text-xl font-semibold ${
                result.success ? 'text-green-600' : 'text-red-600'
              }`}>
                {result.success ? 'âœ¨ Success!' : 'ðŸ’« Learning'}
              </div>
              
              <Button 
                onClick={handleClose}
                variant="outline"
                size="sm"
                className="mt-4"
              >
                Continue
              </Button>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}